// TypeScript definitions for @pgsql/parser

export interface ParseResult {
  parse_tree?: any;
  stderr_buffer?: string;
  error?: {
    message: string;
    funcname: string;
    filename: string;
    lineno: number;
    cursorpos: number;
    context?: string;
  };
}

export interface Parser {
  parse(query: string): ParseResult;
  parseSync?(query: string): ParseResult;
  fingerprint?(query: string): string;
  normalize?(query: string): string;
  loadModule?(): Promise<void>;
}

export declare class Parser {
  constructor(version?: ${VERSION_UNION});
  parse(query: string): Promise<ParseResult>;
  parseSync(query: string): ParseResult;
  fingerprint(query: string): Promise<string>;
  normalize(query: string): Promise<string>;
}

export default Parser;

// Version-specific exports
${VERSION_TYPE_EXPORTS}