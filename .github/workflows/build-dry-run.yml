name: Build Dry Run 🏗

on:
  workflow_dispatch:

jobs:
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Checkout Repository 📥
        uses: actions/checkout@v4

      - name: Setup Node.js 🌐
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install Dependencies 🧶
        run: |
          yarn

      - name: Save Artifacts For NPM 🏗
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-${{ matrix.os }}
          path: |
            ${{ matrix.os == 'macos-latest' && './libpg_query/osx/libpg_query.a' || 
               matrix.os == 'ubuntu-latest' && './libpg_query/linux/libpg_query.a' || 
               matrix.os == 'windows-latest' && './libpg_query/windows/pg_query.lib' }}

  prepare-and-publish:
    needs: build-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository 📥
        uses: actions/checkout@v4

      - name: Get Artifacts 📚
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts

      - name: Prepare artifacts 📦
        run: |
          cp ./downloaded-artifacts/build-artifact-windows-latest/pg_query.lib ./libpg_query/windows/queryparser.lib
          cp ./downloaded-artifacts/build-artifact-ubuntu-latest/libpg_query.a ./libpg_query/linux/libpg_query.a
          cp ./downloaded-artifacts/build-artifact-macos-latest/libpg_query.a ./libpg_query/osx/libpg_query.a
          rm -rf ./downloaded-artifacts
          find ./libpg_query

    # - name: Publish to NPM 🚀
    #   run: |
    #     # Assuming you've set up your package.json and .npmrc correctly
    #     npm publish
      # env:
