name: CI 🚀

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [17-latest]
  workflow_dispatch:

jobs:
  build-wasm:
    name: Build WASM ${{ matrix.package }} 🔧
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: 
          - { name: 'libpg-query', path: 'libpg-query', version: '17' }
          - { name: 'v13', path: 'versions/13', version: '13' }
          - { name: 'v14', path: 'versions/14', version: '14' }
          - { name: 'v15', path: 'versions/15', version: '15' }
          - { name: 'v16', path: 'versions/16', version: '16' }
          - { name: 'v17', path: 'versions/17', version: '17' }
      fail-fast: false
    steps:
      - name: Checkout Repository 📥
        uses: actions/checkout@v4

      - name: Setup Node.js 🌐
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup pnpm 📦
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.1

      - name: Get pnpm store directory 📁
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache 🗄️
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies 🧶
        run: pnpm install

      - name: Build WASM 🏗
        run: |
          if [ "${{ matrix.package.name }}" = "v13" ]; then
            # Download prebuilt WASM for v13 since it can't build in CI
            mkdir -p wasm
            curl -o v13.tgz "https://registry.npmjs.org/@libpg-query/v13/-/v13-13.0.0.tgz"
            tar -xzf v13.tgz --strip-components=1 package/wasm
            rm v13.tgz
          else
            pnpm run build
          fi
        working-directory: ${{ matrix.package.path }}

      - name: Upload WASM Artifacts 📦
        uses: actions/upload-artifact@v4
        with:
          name: wasm-artifacts-${{ matrix.package.name }}
          path: ${{ matrix.package.path }}/wasm/
          retention-days: 1

  test:
    name: Test ${{ matrix.package.name }} on ${{ matrix.os }} ${{ matrix.os == 'ubuntu-latest' && '🐧' || matrix.os == 'macos-latest' && '🍎' || '🪟' }}
    needs: build-wasm
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        package: 
          - { name: 'libpg-query', path: 'libpg-query', version: '17' }
          - { name: 'v13', path: 'versions/13', version: '13' }
          - { name: 'v14', path: 'versions/14', version: '14' }
          - { name: 'v15', path: 'versions/15', version: '15' }
          - { name: 'v16', path: 'versions/16', version: '16' }
          - { name: 'v17', path: 'versions/17', version: '17' }
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository 📥
        uses: actions/checkout@v4

      - name: Setup Node.js 🌐
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup pnpm 📦
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.1

      - name: Get pnpm store directory 📁
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache 🗄️
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies 🧶
        run: pnpm install

      - name: Download WASM Artifacts 📥
        uses: actions/download-artifact@v4
        with:
          name: wasm-artifacts-${{ matrix.package.name }}
          path: ${{ matrix.package.path }}/wasm/

      - name: Run Tests 🔍
        run: pnpm run test
        working-directory: ${{ matrix.package.path }}
