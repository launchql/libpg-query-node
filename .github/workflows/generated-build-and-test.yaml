name: Build and Test 🛠
'on':
  workflow_dispatch: null
jobs:
  build-artifacts:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
    steps:
      - name: Checkout Repository 📥
        uses: actions/checkout@v4
      - name: Setup Node.js 🌐
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
      - name: Configure Git 🛠
        run: |
          git config user.name "Cosmology"
          git config user.email "developers@cosmology.zone"
      - name: Install and Build 📦
        run: |
          yarn
          yarn binary:build
      - name: Save Artifacts For Supabase CDN 🏗
        uses: actions/upload-artifact@v4
        with:
          name: build-supabase-artifact-${{ matrix.os }}
          path: ./build/stage/libpg-query-node/
      - name: Save Artifacts For NPM 🏗
        uses: actions/upload-artifact@v4
        with:
          name: build-npm-artifact-${{ matrix.os }}
          path: |
            ${{ matrix.os == 'macos-latest' && './libpg_query/osx/libpg_query.a' || 
                matrix.os == 'ubuntu-latest' && './libpg_query/linux/libpg_query.a' || 
                matrix.os == 'windows-latest' && './libpg_query/windows/pg_query.lib' }}
  build-wasm:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository 📥
        uses: actions/checkout@v4
      - name: Setup Node.js 🌐
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
      - name: Install and Build 🚀
        run: |
          yarn
      - name: Install Emscripten ✍🏻
        run: |
          sudo apt-get update
          sudo apt-get install cmake python3 python3-pip
          git clone --branch 3.1.59 --depth 1 https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install 3.1.59
          ./emsdk activate 3.1.59
          source ./emsdk_env.sh
      - name: Build with Emscripten 🏗
        run: |
          source ./emsdk/emsdk_env.sh
          emmake make
          emmake make build
      - name: Archive production artifacts 🏛
        uses: actions/upload-artifact@v4
        with:
          name: wasm-artifacts
          path: wasm
  prepare-and-publish:
    needs: build-wasm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository 📥
        uses: actions/checkout@v4
      - name: Get Artifacts 📚
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts
      - name: Prepare artifacts 📦
        run: |
          find ./downloaded-artifacts/
          cp ./downloaded-artifacts/build-npm-artifact-windows-latest/pg_query.lib ./libpg_query/windows/queryparser.lib
          cp ./downloaded-artifacts/build-npm-artifact-ubuntu-latest/libpg_query.a ./libpg_query/linux/libpg_query.a
          cp ./downloaded-artifacts/build-npm-artifact-macos-latest/libpg_query.a ./libpg_query/osx/libpg_query.a
          cp ./downloaded-artifacts/wasm-artifacts/libpg-query.js ./wasm/libpg-query.js
          cp ./downloaded-artifacts/wasm-artifacts/libpg-query.wasm ./wasm/libpg-query.wasm
          rm -rf ./downloaded-artifacts
      - name: Log
        run: |
          find ./libpg_query/
          find ./wasm
